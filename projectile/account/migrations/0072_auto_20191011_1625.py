# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-10-11 10:25
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import enumerify.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0163_personorganization_area'),
        ('account', '0071_organizationwiseomisservice_organizationwiseomisservicebill'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransactionPayablePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, 'Active'), (1, 'Inactive'), (2, 'Draft'), (3, 'Released'), (4, 'Approved Draft'), (5, 'Absent'), (6, 'Purchase Order'), (7, 'Suspend'), (8, 'On Hold'), (9, 'Hardwired'), (10, 'Loss'), (11, 'Freeze')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_wise_serial', models.PositiveIntegerField(default=0, editable=False, help_text='OrganizationWise Serial Number')),
                ('user_ip', models.GenericIPAddressField(blank=True, editable=False, null=True)),
                ('amount', models.FloatField(default=0)),
                ('entry_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_transactionpayableperson_entry_by', to=settings.AUTH_USER_MODEL, verbose_name='entry by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization', verbose_name='organization name')),
            ],
            options={
                'verbose_name': 'Payable Person To Transaction',
                'verbose_name_plural': 'Payables Person To Transactions',
            },
        ),
        migrations.AddField(
            model_name='payabletoperson',
            name='paid',
            field=models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AddField(
            model_name='payabletoperson',
            name='paid_status',
            field=enumerify.fields.SelectIntegerField(choices=[(0, '-'), (1, 'Due'), (2, 'Paid'), (3, 'Partial')], db_index=True, default=1, verbose_name='paid status'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_for',
            field=enumerify.fields.SelectIntegerField(choices=[(0, '-'), (1, 'Sale'), (2, 'Admission'), (3, 'Appointment'), (4, 'Service Consumed'), (5, 'Purchase'), (6, 'Person Payable'), (7, 'Others')], db_index=True, default=5),
        ),
        migrations.AddField(
            model_name='transactionpayableperson',
            name='person_payable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='transaction_payable', to='account.PayableToPerson'),
        ),
        migrations.AddField(
            model_name='transactionpayableperson',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='payable_transaction', to='account.Transaction'),
        ),
        migrations.AddField(
            model_name='transactionpayableperson',
            name='updated_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_transactionpayableperson_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='last updated by'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='person_payables',
            field=models.ManyToManyField(related_name='person_payable_transaction', through='account.TransactionPayablePerson', to='account.PayableToPerson'),
        ),
    ]
