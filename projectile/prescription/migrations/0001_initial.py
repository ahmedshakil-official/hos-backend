# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-16 10:18
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumerify.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_auto_20170616_0637'),
        ('pharmacy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'name', unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_global', enumerify.fields.SelectIntegerField(choices=[(0, b'Private'), (1, b'Global'), (2, b'Changed into Global')], db_index=True, default=1)),
                ('clone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Diagnosis')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'Diagnoses',
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'name', unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_global', enumerify.fields.SelectIntegerField(choices=[(0, b'Private'), (1, b'Global'), (2, b'Changed into Global')], db_index=True, default=1)),
                ('clone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.LabTest')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PhysicalTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'name', unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_global', enumerify.fields.SelectIntegerField(choices=[(0, b'Private'), (1, b'Global'), (2, b'Changed into Global')], db_index=True, default=1)),
                ('clone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.PhysicalTest')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('type', enumerify.fields.SelectIntegerField(choices=[(0, b'Normal'), (1, b'Medical Record')], db_index=True, default=0)),
                ('next_visit', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('for_initial_data', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionDiagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Prescription')),
                ('relative', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Diagnosis')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionLabTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('result', models.CharField(blank=True, max_length=255, null=True)),
                ('taken_at', models.DateField(auto_now_add=True)),
                ('state', enumerify.fields.SelectIntegerField(choices=[(0, b'Pre Operation'), (1, b'Post Operation'), (2, b'During Operation')], db_index=True, default=0)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lab_tests_list', to='prescription.Prescription')),
                ('relative', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.LabTest')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionPhysicalTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('result', models.CharField(blank=True, max_length=255, null=True)),
                ('taken_at', models.DateField(auto_now_add=True)),
                ('state', enumerify.fields.SelectIntegerField(choices=[(0, b'Pre Operation'), (1, b'Post Operation'), (2, b'During Operation')], db_index=True, default=0)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='physical_tests_list', to='prescription.Prescription')),
                ('relative', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.PhysicalTest')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionSymptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Prescription')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionTreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interval', models.CharField(max_length=255)),
                ('duration', models.CharField(max_length=255)),
                ('method', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='treatments', to='prescription.Prescription')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pharmacy.Product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', enumerify.fields.SelectIntegerField(choices=[(0, b'Active'), (1, b'Inactive'), (2, b'Draft')], db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'name', unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_global', enumerify.fields.SelectIntegerField(choices=[(0, b'Private'), (1, b'Global'), (2, b'Changed into Global')], db_index=True, default=1)),
                ('clone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Symptom')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='prescriptionsymptom',
            name='relative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prescription.Symptom'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='diagnoses',
            field=models.ManyToManyField(through='prescription.PrescriptionDiagnosis', to='prescription.Diagnosis'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='lab_tests',
            field=models.ManyToManyField(through='prescription.PrescriptionLabTest', to='prescription.LabTest'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Organization'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='patient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='prescription',
            name='physical_tests',
            field=models.ManyToManyField(through='prescription.PrescriptionPhysicalTest', to='prescription.PhysicalTest'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='prescriber',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='prescription',
            name='symptoms',
            field=models.ManyToManyField(through='prescription.PrescriptionSymptom', to='prescription.Symptom'),
        ),
        migrations.AlterUniqueTogether(
            name='prescriptionsymptom',
            unique_together=set([('prescription', 'relative')]),
        ),
        migrations.AlterIndexTogether(
            name='prescriptionsymptom',
            index_together=set([('prescription', 'relative')]),
        ),
        migrations.AlterUniqueTogether(
            name='prescriptiondiagnosis',
            unique_together=set([('prescription', 'relative')]),
        ),
        migrations.AlterIndexTogether(
            name='prescriptiondiagnosis',
            index_together=set([('prescription', 'relative')]),
        ),
    ]
